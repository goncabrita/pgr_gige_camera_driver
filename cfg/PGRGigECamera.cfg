#! /usr/bin/env python

PACKAGE='pgr_gige_camera_driver'
import roslib; roslib.load_manifest(PACKAGE)

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

framerate_enum = gen.enum([ gen.const("FRAMERATE_1_875", int_t, 0, "1.875 fps"),
                            gen.const("FRAMERATE_3_75", int_t, 1, "3.75 fps"),
                            gen.const("FRAMERATE_7_5", int_t, 2, "7.5 fps"),
                            gen.const("FRAMERATE_15", int_t, 3, "15 fps"),
                            gen.const("FRAMERATE_30", int_t, 4, "30 fps"),
                            gen.const("FRAMERATE_60", int_t, 5, "60 fps"),
                            gen.const("FRAMERATE_120", int_t, 6, "120 fps"),
                            gen.const("FRAMERATE_240", int_t, 7, "240 fps"),
                            gen.const("FRAMERATE_FORMAT7", int_t, 8, "Custom frame rate (Format7)")
                          ], "Enum to set the mode.")

pixel_format_enum = gen.enum([  gen.const("PIXEL_FORMAT_MONO8", int_t, 2147483648, "8 bits of mono information"),
                                gen.const("PIXEL_FORMAT_411YUV8", int_t, 1073741824, "YUV 4:1:1"),
                                gen.const("PIXEL_FORMAT_422YUV8", int_t, 536870912, "YUV 4:2:2"),
                                gen.const("PIXEL_FORMAT_444YUV8", int_t, 268435456, "YUV 4:4:4"),
                                gen.const("PIXEL_FORMAT_RGB8", int_t, 134217728, "R = G = B = 8 bits"),
                                gen.const("PIXEL_FORMAT_MONO16", int_t, 67108864, "16 bits of mono information"),
                                gen.const("PIXEL_FORMAT_RGB16", int_t, 33554432, "R = G = B = 16 bits"),
                                gen.const("PIXEL_FORMAT_S_MONO16", int_t, 16777216, "16 bits of signed mono information"),
                                gen.const("PIXEL_FORMAT_S_RGB16", int_t, 8388608, "R = G = B = 16 bits signed"),
                                gen.const("PIXEL_FORMAT_RAW8", int_t, 4194304, "8 bit raw data output of sensor"),
                                gen.const("PIXEL_FORMAT_RAW16", int_t, 2097152, "16 bit raw data output of sensor"),
                                gen.const("PIXEL_FORMAT_MONO12", int_t, 1048576, "12 bits of mono information"),
                                gen.const("PIXEL_FORMAT_RAW12", int_t, 524288, "12 bit raw data output of sensor"),
                                gen.const("PIXEL_FORMAT_BGR", int_t, 2147483656, "24 bit BGR"),
                                gen.const("PIXEL_FORMAT_BGRU", int_t, 1073741832, "32 bit BGRU"),
                                gen.const("PIXEL_FORMAT_RGB", int_t, 134217728, "24 bit RGB"),
                                gen.const("PIXEL_FORMAT_RGBU", int_t, 1073741826, "32 bit RGBU"),
                                gen.const("PIXEL_FORMAT_BGR16", int_t, 33554433, "R = G = B = 16 bits"),
                                gen.const("PIXEL_FORMAT_BGRU16", int_t, 33554434, "64 bit BGRU"),
                                gen.const("PIXEL_FORMAT_422YUV8_JPEG", int_t, 1073741825, "JPEG compressed stream")
                                ], "Enum to set the mode.")

gen.add("auto_framerate", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Sets the framerate to automatic. Allows the framerate to adjust as necessary.", True)
gen.add("framerate", int_t, SensorLevels.RECONFIGURE_RUNNING, "Framerate", 8, edit_method = framerate_enum)
gen.add("custom_framerate", int_t, SensorLevels.RECONFIGURE_RUNNING, "Custom framerate in fps.", 1, 1, 240)

gen.add("brightness", int_t, SensorLevels.RECONFIGURE_STOP, "Camera brightness in %.", 0, 0, 100)

gen.add("auto_exposure", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Sets the camera exposure duration to automatic. Causes the @b exposure setting to be ignored.", True)
gen.add("exposure", double_t, SensorLevels.RECONFIGURE_RUNNING, "Camera exposure in EV.", 0.7, -7.6, 2.4)

gen.add("sharpness", int_t, SensorLevels.RECONFIGURE_RUNNING, "Camera sharpness.", 1024, 0, 4095)

gen.add("hue", double_t, SensorLevels.RECONFIGURE_RUNNING, "Camera hue in deg.", 0.0, -180.0, 180.0)

gen.add("saturation", double_t, SensorLevels.RECONFIGURE_RUNNING, "Camera saturation.", 100.0, 0.0, 400.0)

gen.add("gamma", double_t, SensorLevels.RECONFIGURE_RUNNING, "Camera gamma.", 1.250, 0.5, 5.0)

gen.add("auto_shutter", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Sets the camera shutter speed to automatic. Allows the auto-exposure to adjust as necessary.", True)
gen.add("shutter", double_t, SensorLevels.RECONFIGURE_RUNNING, "Camera shutter speed in ms.", 0.050, 0.03, 30.0)

gen.add("auto_gain", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Sets the analog gain to automatic. Causes the @b gain setting to be ignored.", True)
gen.add("gain", double_t, SensorLevels.RECONFIGURE_RUNNING, "The gain level in dB.", 24.0, -4.0, 24.0)

gen.add("auto_whitebalance", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Whether whitebalance will continuously adjust to the current scene. Causes the @b whitebalance_red and @b whitebalance_blue settings to be ignored.", True)
gen.add("whitebalance_red", int_t, SensorLevels.RECONFIGURE_RUNNING, "Red gain as a percentage of the camera default setting.", 0, 0, 1023)
gen.add("whitebalance_blue", int_t, SensorLevels.RECONFIGURE_RUNNING, "Blue gain as a percentage of the camera default setting.", 0, 0, 1023)

gen.add("image_left", int_t, SensorLevels.RECONFIGURE_RUNNING, "Image start pixel from left.", 0, 0, 4000)
gen.add("image_top", int_t, SensorLevels.RECONFIGURE_RUNNING, "Image start pixel from right.", 0, 0, 4000)
gen.add("image_width", int_t, SensorLevels.RECONFIGURE_RUNNING, "Image width", 1280, 640, 4000) #1280 is max
gen.add("image_height", int_t, SensorLevels.RECONFIGURE_RUNNING, "Image height", 960, 480, 4000) # 960 is max

gen.add("pixel_format", int_t, SensorLevels.RECONFIGURE_RUNNING, "Pixel format", 0, edit_method = pixel_format_enum)

exit(gen.generate(PACKAGE, "pgr_gige_camera_driver", "PGRGigECamera"))
